package store

const diskGlobalTmpl = `// Code generated by github.com/gobuffalo/packr. DO NOT EDIT.

// You can use the "packr clean" command to clean up this,
// and any other packr generated files.
package {{.Package}}

import (
	"github.com/gobuffalo/packr"
	"github.com/gobuffalo/packr/file/resolver"
)

var _ = func() error {
	const gk = "{{.GK}}"
	g := packr.New(gk, "")
	hgr, err := resolver.NewHexGzip(map[string]string{
	{{- range $k, $v := .GlobalFiles }}
		"{{$k}}": "{{$v}}",
	{{- end }}
	})
	if err != nil {
		return err
	}
	g.DefaultResolver = hgr

	{{- range $box := .Boxes}}
	func() {
		b := packr.New("{{$box.Name}}", "{{$box.Path}}")
{{ printFiles $box -}}
	}()
	{{ end }}
	return nil
}()
`

const diskImportTmpl = `// Code generated by github.com/gobuffalo/packr. DO NOT EDIT.

// You can use the "packr clean" command to clean up this,
// and any other packr generated files.
package {{.Package}}

import _ "{{.Import}}"
`

const diskGlobalBoxTmpl = `func() {
		b := packr.New("{{$box.Name}}", "{{$box.Path}}")
		{{- range $box.Files }}
		b.SetResolver("{{}}", packr.Pointer{ForwardBox: gk, ForwardPath: \"%s\"})\n
		{{ end -}}
}()
`
